#import "./types/ats.graphql"
#import "./types/baseSort.graphql"
#import "./types/boutique.graphql"
#import "./types/boutique/boutiqueContext.graphql"
#import "./types/boutique/boutiqueSegment.graphql"
#import "./types/boutique/boutiqueTemplate.graphql"
#import "./types/dayPart.graphql"
#import "./types/owner.graphql"
#import "./types/product.graphql"
#import "./types/product/productContext.graphql"
#import "./types/product/productTemplate.graphql"
#import "./types/returnPolicy.graphql"

type Query {
  ats: AtsList!
  baseSort(boutiqueContext: ID!, segmentId: ID!): BaseSortSet!
  boutique(businessId: ID!): Boutiques!
  boutiqueContext(businessId: ID!): BoutiqueContexts!
  boutiqueTemplate: BoutiqueTemplates!
  dayPart(startsAfter: String!, startsBefore: String!): DayParts!
  owners: Owners!
  product(idList: [ID]!): Products!
  productContext(boutiqueContext: ID!): ProductContexts!
  productTemplate: ProductTemplates!
  returnPolicy: ReturnPolicies!
  search(allForBoutique: ID, boutiqueContextId: ID, updatedSince: String): Products!
  segment(name: String!, type: String!): Segments!
}
