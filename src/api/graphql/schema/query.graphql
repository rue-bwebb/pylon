#import "./types/ats.graphql"
#import "./types/baseSort.graphql"
#import "./types/brand.graphql"
#import "./types/boutique.graphql"
#import "./types/boutique/boutiqueContext.graphql"
#import "./types/boutique/boutiqueInfo.graphql"
#import "./types/boutique/boutiqueSegment.graphql"
#import "./types/boutique/boutiqueSegmentType.graphql"
#import "./types/boutique/boutiqueSiteContext.graphql"
#import "./types/boutique/boutiqueSiteSection.graphql"
#import "./types/boutique/boutiqueTag.graphql"
#import "./types/boutique/boutiqueTemplate.graphql"
#import "./types/dayPart.graphql"
#import "./types/meta.graphql"
#import "./types/owner.graphql"
#import "./types/product.graphql"
#import "./types/product/productAttribute.graphql"
#import "./types/product/productContext.graphql"
#import "./types/product/productImage.graphql"
#import "./types/product/productInfo.graphql"
#import "./types/product/productTag.graphql"
#import "./types/product/productTemplate.graphql"
#import "./types/returnPolicy.graphql"
#import "./types/segment.graphql"
#import "./types/segment/segmentType.graphql"
#import "./types/sku.graphql"
#import "./types/sku/activeVendor.graphql"
#import "./types/sku/skuAttribute.graphql"
#import "./types/sku/purchaseOrderItem.graphql"
#import "./types/sku/purchaseOrder.graphql"
#import "./types/store.graphql"

type Query {
  ats: AtsList!
  baseSort(boutiqueContext: ID!, segmentId: ID!): BaseSortSet!
  boutique(businessId: ID!): Boutiques!
  boutiqueContext(businessId: ID!): BoutiqueContexts!
  boutiqueTemplate: BoutiqueTemplates!
  dayPart(startsAfter: String!, startsBefore: String!): DayParts!
  owners: Owners!
  products(
    ids: [ID],
    first: Int,
    after: String,
    last: Int,
    before: String
  ): PaginatedProducts!
  productContext(boutiqueContext: ID!): ProductContexts!
  productTemplate: ProductTemplates!
  returnPolicy: PaginatedReturnPolicies!
  search(allForBoutique: ID, boutiqueContextId: ID, updatedSince: String): PaginatedProducts!
  segment(name: String!, type: String!): Segments!
}
